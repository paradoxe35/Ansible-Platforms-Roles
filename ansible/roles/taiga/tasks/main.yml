---
# tasks file for ansible/roles/taiga
- name: Taiga | remote directory
  tags: [taiga_superuser, taiga_ldap, taiga_front_config]
  set_fact:
    taiga_directory: "/home/{{ ansible_user }}/taiga-config"

- name: "Check if path exists"
  stat:
    path: "{{ taiga_directory }}/certbot/conf/live/{{ taiga_domain }}/fullchain.pem"
  register: fullchain_file

- name: Taiga | Create taiga-config folder
  file:
    path: "{{ taiga_directory }}/taiga-gateway"
    state: directory
    recurse: yes
    mode: 0755

- name: Var  | taiga_is_secure -> false
  set_fact:
    taiga_is_secure: false

- name: Taiga | docker compose template with no secure
  template:
    src: "../templates/docker-compose.yml.j2"
    dest: "{{ taiga_directory }}/docker-compose.yml"
    mode: "0755"
    force: yes
  when: not fullchain_file.stat.exists or taiga_secure == false

- name: Taiga | insecure conf template
  template:
    src: "../templates/taiga-insecure.conf.j2"
    dest: "{{ taiga_directory }}/taiga-gateway/taiga.conf"
    mode: "0755"
    force: yes
  when: not fullchain_file.stat.exists or taiga_secure == false

- name: Taiga | Docker compose create and start services
  command: "docker-compose -f docker-compose.yml up -d"
  args:
    chdir: "{{ taiga_directory }}"
  register: output
  when: not fullchain_file.stat.exists or taiga_secure == false

- name: Sleep for 5 seconds and continue with play
  wait_for:
    timeout: 5
  when: not fullchain_file.stat.exists or taiga_secure == false

- name: Taiga | generate ssh certificate
  command: "docker-compose run --rm certbot certonly --non-interactive --agree-tos --webroot --webroot-path /var/www/certbot/ -d {{ taiga_domain }} -m {{ system_email }}"
  args:
    chdir: "{{ taiga_directory }}"
    creates: "{{ taiga_directory }}/certbot/conf/live/{{ taiga_domain }}/fullchain.pem"
  when: taiga_secure == true and not fullchain_file.stat.exists

- name: Taiga | taiga ssl conf template
  template:
    src: "../templates/taiga-secure.conf.j2"
    dest: "{{ taiga_directory }}/taiga-gateway/taiga.conf"
    mode: "0755"
    force: yes
  when: taiga_secure == true

- name: Var  | taiga_is_secure -> true
  set_fact:
    taiga_is_secure: true
  when: taiga_secure == true

- name: Taiga | docker compose template with ssl enabled
  template:
    src: "../templates/docker-compose.yml.j2"
    dest: "{{ taiga_directory }}/docker-compose.yml"
    mode: "0755"
    force: yes
  when: taiga_secure == true

- name: Taiga | Docker compose recreate services
  command: "docker-compose -f docker-compose.yml up -d --force-recreate"
  args:
    chdir: "{{ taiga_directory }}"
  register: output
  when: taiga_secure == true

- name: Sleep for 5 seconds and continue with play
  wait_for:
    timeout: 5
  when: taiga_secure == true

- name: Taiga | Check super exists
  tags: [taiga_superuser]
  expect:
    chdir: "{{ taiga_directory }}"
    echo: true
    command: 'docker-compose exec taiga-db psql -U taiga -d taiga --command "select email from users_user"'
    responses:
      "Password": "taiga"
  register: user_exists

- name: Taiga | Create Super user
  tags: taiga_superuser
  expect:
    chdir: "{{ taiga_directory }}"
    command: "docker-compose exec taiga-back python manage.py createsuperuser --username {{ taiga_superuser_username }} --email {{ taiga_superuser_email }}"
    echo: true
    responses:
      "Password": "{{ taiga_superuser_password }}"
      "Password (again)": "{{ taiga_superuser_password }}"
  when: "user_exists.stdout.find(taiga_superuser_email) == -1"

# Taiga LDAP
- name: Taiga | LDAP Config
  tags: taiga_ldap
  import_tasks: taiga_ldap.yml
  when: taiga_ldap_enabled == true

# Taiga Front Config
- name: Taiga | Front config
  tags: [taiga_ldap, taiga_front_config]
  import_tasks: taiga-front_config.yml
  when: taiga_ldap_enabled == true or taiga_login_form_type != "" or taiga_gitlab_enabled == true

# Taiga login form type LDAP
- name: Taiga | login form type
  tags: [taiga_ldap, taiga_front_config]
  import_tasks: login-form-type.yml
  when: taiga_ldap_enabled == true or taiga_gitlab_enabled == true

# Taiga Login gitlab
- name: Taiga | Login gitlab
  tags: [taiga_front_config]
  import_tasks: login-gitlab.yml
  when: taiga_gitlab_enabled == true

# restart docker-compose
- name: "Taiga | Restart docker services"
  command: "docker-compose -f docker-compose.yml up -d --force-recreate"
  args:
    chdir: "{{ taiga_directory }}"

# Wait 5 seconds and start again container (For info check here https://github.com/taigaio/taiga-docker/issues/73)
- name: Taiga Issue | Wait 5 seconds
  wait_for:
    timeout: 5

- name: Taiga | Start container which is not running
  command: "docker-compose -f docker-compose.yml up -d"
  args:
    chdir: "{{ taiga_directory }}"
  when: taiga_secure == true
