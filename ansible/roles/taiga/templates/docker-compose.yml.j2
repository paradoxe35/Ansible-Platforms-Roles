{% if taiga_gitlab_enabled %}
{% set shared_config = [
  {"TAIGA_LOGIN_FORM_TYPE": taiga_login_form_type  or "normal" },
  {"PUBLIC_REGISTER_ENABLED": taiga_public_register_enabled | bool },

  {"ENABLE_GITLAB_AUTH": taiga_gitlab_enabled | bool },
  {"GITLAB_API_CLIENT_ID": taiga_gitlab_api_client_id },
  {"GITLAB_API_CLIENT_SECRET": taiga_gitlab_api_client_secret },
  {"GITLAB_CLIENT_ID": taiga_gitlab_api_client_id },
  {"GITLAB_URL": taiga_gitlab_url }
] %}
{% else %}
{% set shared_config = [
  {"TAIGA_LOGIN_FORM_TYPE": taiga_login_form_type or "normal" },
  {"PUBLIC_REGISTER_ENABLED": taiga_public_register_enabled | bool },
] %}
{% endif %}
{% set front_conf = taiga_ldap_enabled == True or taiga_login_form_type != "" or taiga_gitlab_enabled == True %}
version: "3.5"

x-environment:
  &default-back-environment
  # Database settings
  POSTGRES_DB: taiga
  POSTGRES_USER: taiga
  POSTGRES_PASSWORD: taiga
  POSTGRES_HOST: taiga-db
  # Taiga settings
  TAIGA_SECRET_KEY: "{{ taiga_secret_key }}"
  TAIGA_SITES_SCHEME: "http{{ 's' if taiga_secure == True and taiga_is_secure == True else '' }}"
  TAIGA_SITES_DOMAIN: "{{ taiga_domain }}"
  TAIGA_SUBPATH: "" # "" or "/subpath"
  # Email settings.
{% if taiga_email_enabled %}
  EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
  DEFAULT_FROM_EMAIL: "{{ taiga_email_from }}"
  EMAIL_USE_TLS: "{{ taiga_email_use_tls }}"
  EMAIL_USE_SSL: "{{ taiga_email_use_ssl }}"
  EMAIL_HOST: "{{ taiga_email_host }}"
  EMAIL_PORT: {{ taiga_email_port }}
  EMAIL_HOST_USER: "{{ taiga_email_username }}"
  EMAIL_HOST_PASSWORD: "{{ taiga_email_password }}"
{% endif %}
  # Rabbitmq settings
  # Should be the same as in taiga-async-rabbitmq and taiga-events-rabbitmq
  RABBITMQ_USER: taiga
  RABBITMQ_PASS: taiga
  # Telemetry settings
  ENABLE_TELEMETRY: "True"
{% for config in shared_config %}
{% for key, value in config.items() %}
  {{ key }}: "{{ value }}"
{% endfor %}
{% endfor %}

x-volumes:
  &default-back-volumes
    - /var/run/docker.sock:/var/run/docker.sock
    - taiga-static-data:/taiga-back/static
    - taiga-media-data:/taiga-back/media
{% if taiga_ldap_enabled %}
    - taiga-settings:/taiga-back/settings
    - taiga-lib:/opt/venv/lib/
{% endif %}
  # - ./settings/config.py:/taiga-back/settings/config.py


services:
  taiga-db:
    image: postgres:12.3
    restart: unless-stopped
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: taiga
      POSTGRES_PASSWORD: taiga
    volumes:
      - taiga-db-data:/var/lib/postgresql/data
    networks:
      - taiga

  taiga-back:
    image: taigaio/taiga-back:latest
    restart: unless-stopped
    container_name: taiga-back
    environment: *default-back-environment
    volumes: *default-back-volumes
    networks:
      - taiga
    depends_on:
      - taiga-db
      - taiga-events-rabbitmq
      - taiga-async-rabbitmq

  taiga-async:
    image: taigaio/taiga-back:latest
    restart: unless-stopped
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    environment: *default-back-environment
    volumes: *default-back-volumes
    networks:
      - taiga
    depends_on:
      - taiga-db
      - taiga-back
      - taiga-async-rabbitmq

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    restart: unless-stopped
    environment:
      RABBITMQ_ERLANG_COOKIE: secret-erlang-cookie
      RABBITMQ_DEFAULT_USER: taiga
      RABBITMQ_DEFAULT_PASS: taiga
      RABBITMQ_DEFAULT_VHOST: taiga
    volumes:
      - taiga-async-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga

  taiga-front:
    image: taigaio/taiga-front:latest
    restart: unless-stopped
    environment:
      TAIGA_URL: "http{{ 's' if taiga_secure == True and taiga_is_secure == True else '' }}://{{ taiga_domain }}"
      TAIGA_WEBSOCKETS_URL: "ws{{ 's' if taiga_secure == True and taiga_is_secure == True else '' }}://{{ taiga_domain }}"
      TAIGA_SUBPATH: "" # "" or "/subpath"
{% for config in shared_config %}
{% for key, value in config.items() %}
      {{ key }}: "{{ value | lower }}"
{% endfor %}
{% endfor %}
    networks:
      - taiga
{% if front_conf %}
    volumes:
      - taiga-front-config:/usr/share/nginx/html/
{% endif %}

  taiga-events:
    image: taigaio/taiga-events:latest
    restart: unless-stopped
    environment:
      RABBITMQ_USER: taiga
      RABBITMQ_PASS: taiga
      TAIGA_SECRET_KEY: "{{ taiga_secret_key }}"
    networks:
      - taiga
    depends_on:
      - taiga-events-rabbitmq

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    restart: unless-stopped
    environment:
      RABBITMQ_ERLANG_COOKIE: secret-erlang-cookie
      RABBITMQ_DEFAULT_USER: taiga
      RABBITMQ_DEFAULT_PASS: taiga
      RABBITMQ_DEFAULT_VHOST: taiga
    volumes:
      - taiga-events-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - taiga

  taiga-protected:
    image: taigaio/taiga-protected:latest
    restart: unless-stopped
    environment:
      MAX_AGE: 360
      SECRET_KEY: "{{ taiga_secret_key }}"
    networks:
      - taiga

  taiga-gateway:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./taiga-gateway/taiga.conf:/etc/nginx/conf.d/default.conf/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - taiga-static-data:/taiga/static
      - taiga-media-data:/taiga/media
    networks:
      - taiga
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events


  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  taiga-static-data:
  taiga-media-data:
  taiga-db-data:
  taiga-async-rabbitmq-data:
  taiga-events-rabbitmq-data:
{% if front_conf %}
  taiga-front-config:
{% endif %}
{% if taiga_ldap_enabled %}
  taiga-settings:
  taiga-lib:
{% endif %}

networks:
  taiga:
